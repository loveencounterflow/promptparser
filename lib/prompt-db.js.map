{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/prompt-db.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,YAAA,EAAA,cAAA,EAAA,SAAA,EAAA,GAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,wBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,OAHF,EAIE,GAJF,CAAA,GAI4B,GAAG,CAAC,GAJhC,EAbA;;;EAmBA,CAAA,CAAE,IAAF,CAAA,GAA4B,GAAG,CAAC,KAAhC;;EACA,CAAA,CAAE,SAAF,CAAA,GAA4B,OAAA,CAAQ,SAAR,CAA5B,EApBA;;;EAsBA,CAAA,CAAE,KAAF,CAAA,GAA4B,OAAA,CAAQ,OAAR,CAA5B;;EACA,CAAA,CAAE,SAAF,EACE,IADF,EAEE,KAFF,CAAA,GAE4B,KAF5B,EAvBA;;;EA2BA,CAAA,CAAE,cAAF,CAAA,GAA4B,OAAA,CAAQ,kBAAR,CAA5B;;EACA,CAAA,CAAE,YAAF,CAAA,GAA4B,OAAA,CAAQ,gBAAR,CAA5B;;EACA,CAAA,CAAE,IAAF,CAAA,GAA4B,OAAA,CAAQ,MAAR,CAA5B;;EACA,CAAA,CAAE,GAAF,CAAA,GAA4B,IAA5B;;EACA,CAAA,CAAE,CAAF,CAAA,GAA4B,OAAA,CAAQ,aAAR,CAA5B;;EACA,CAAA,CAAE,KAAF,CAAA,GAA4B,OAAA,CAAQ,YAAR,CAA5B,EAhCA;;;EAoCM,YAAN,MAAA,UAAA,CAAA;;IAGE,WAAa,CAAE,GAAF,CAAA;AACf,UAAA;MAAI,IAAA,CAAK,IAAL,EAAQ,OAAR,EAAkB,SAAA,CAAA,CAAlB;MACA,IAAC,CAAA,GAAD,GAAO,IAAC,CAAA,KAAK,CAAC,MAAM,CAAC,aAAd,CAA4B,GAA5B;MACP,IAAA,GAAO,CAAC,CAAC,KAAF,CAAQ,IAAC,CAAA,GAAG,CAAC,KAAb,EAAoB,IAApB;MACP,IAAc,IAAC,CAAA,GAAG,CAAC,KAAK,CAAC,QAAzB;QAAA,KAAA,CAAM,IAAN,EAAA;;MACA,IAAA,CAAK,IAAL,EAAQ,IAAR,EAAc,IAAI,IAAJ,CAAS,CAAE,IAAF,CAAT,CAAd;MACA,IAAC,CAAA,mBAAD,CAAA;AACA,aAAO;IAPI,CADf;;;IAWE,mBAAqB,CAAA,CAAA;AACvB,UAAA,WAAA;;MACI,OAAA,CAAQ,OAAR,EAAiB,yCAAjB,EADJ;;MAGI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;wCAAA,CAAP,EAHJ;;MAQI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA,8DAAA,CAAP,EAA6E,CACzE,CAAC,CAAC,YAAF,CAAe,CAAC,CAAC,YAAjB,CADyE,EACxC,CAAC,CAAC,YADsC,CAA7E,EARJ;;MAWI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;wCAAA,CAAP,EAXJ;;MAkBI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;mEAAA,CAAP,EAlBJ;;MA0BI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;yCAAA,CAAP,EA1BJ;;MAkCI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;;gDAAA,CAAP,EAlCJ;;MA2CI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;;;;;+CAAA,CAAP,EA3CJ;;MAuDI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;mEAAA,CAAP,EAvDJ;;MA8DI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;;iDAAA,CAAP,EA9DJ;;MAuEI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;;sBAAA,CAAP,EAvEJ;;MAgFI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;;uDAAA,CAAP,EAhFJ;;MAyFI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;;;;sFAAA,CAAP,EAzFJ;;;;MAuGI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA;;;;;;;;;;;;;;;;;;GAAA,CAAP,EAvGJ;;;;MA8HI,IAAA,CAAK,IAAL,EAAQ,aAAR,EAAuB,WAAA,GAAc,CAAA,CAArC,EA9HJ;;MAgII,WAAW,CAAC,WAAZ,GAA6B,CAAA,CAAA,CAAA,GAAA;AACjC,YAAA,uBAAA,EAAA;QAAM,WAAA,GAAc,IAAC,CAAA,EAAE,CAAC,aAAJ,CAAkB;UAAE,IAAA,EAAM,aAAR;UAAwB,WAAA,EAAa;YAAE,MAAA,EAAQ;UAAV;QAArC,CAAlB;AACd,eAAO,CAAC,CAAC,WAAF,CAAc,uBAAA,GAA0B,CAAE,CAAF,CAAA,GAAA;iBAAS,IAAC,CAAA,EAAD,CAAI,WAAJ,EAAiB,CAAjB;QAAT,CAAxC;MAFoB,CAAA,IAhIjC;;MAoII,WAAW,CAAC,WAAZ,GAA6B,CAAA,CAAA,CAAA,GAAA;AACjC,YAAA,uBAAA,EAAA;QAAM,WAAA,GAAc,IAAC,CAAA,EAAE,CAAC,aAAJ,CAAkB;UAAE,IAAA,EAAM,aAAR;UAAwB,WAAA,EAAa;YAAE,MAAA,EAAQ;UAAV;QAArC,CAAlB;AACd,eAAO,CAAC,CAAC,WAAF,CAAc,uBAAA,GAA0B,CAAE,CAAF,CAAA,GAAA;iBAAS,IAAC,CAAA,EAAD,CAAI,WAAJ,EAAiB,IAAA,CAAK,CAAL,EAAQ,QAAA,CAAE,CAAF,CAAA;mBAC/E,CAAC,CAAC,QAAF,GAAgB,CAAC,CAAC,QAAF,KAAc,IAAjB,GAA2B,CAA3B,GAAkC,CAAE;UAD8B,CAAR,CAAjB;QAAT,CAAxC;MAFoB,CAAA,IApIjC;;MAyII,WAAW,CAAC,eAAZ,GAAiC,CAAA,CAAA,CAAA,GAAA;AACrC,YAAA,2BAAA,EAAA;QAAM,WAAA,GAAc,IAAC,CAAA,EAAE,CAAC,aAAJ,CAAkB;UAAE,IAAA,EAAM;QAAR,CAAlB;AACd,eAAO,CAAC,CAAC,WAAF,CAAc,2BAAA,GAA8B,CAAE,CAAF,CAAA,GAAA;iBAAS,IAAC,CAAA,EAAD,CAAI,WAAJ,EAAiB,CAAjB;QAAT,CAA5C;MAFwB,CAAA,IAzIrC;;MA6II,WAAW,CAAC,SAAZ,GAA2B,CAAA,CAAA,CAAA,GAAA;AAC/B,YAAA,qBAAA,EAAA;QAAM,WAAA,GAAc,IAAC,CAAA,EAAE,CAAC,aAAJ,CAAkB;UAAE,IAAA,EAAM;QAAR,CAAlB;AACd,eAAO,CAAC,CAAC,WAAF,CAAc,qBAAA,GAAwB,CAAE,CAAF,CAAA,GAAA;iBAAS,IAAC,CAAA,EAAD,CAAI,WAAJ,EAAiB,CAAjB;QAAT,CAAtC;MAFkB,CAAA,IA7I/B;;AAiJI,aAAO;IAlJY,CAXvB;;;IAgKE,sBAAwB,CAAA,CAAA;aAAG,IAAI,GAAJ,CAAQ,IAAC,CAAA,EAAE,CAAC,YAAJ,CAAiB,GAAG,CAAA,8BAAA,CAApB,CAAR;IAAH;;IACxB,oBAAwB,CAAA,CAAA;aAAG,IAAI,GAAJ,CAAQ,IAAC,CAAA,EAAE,CAAC,YAAJ,CAAiB,GAAG,CAAA,kCAAA,CAApB,CAAR;IAAH;;EAnK1B,EApCA;;;EA0MA,MAAM,CAAC,OAAP,GAAiB,CACf,SADe,EA1MjB;;;EA+MA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAA+B,MAAS,CAAA,CAAA,CAAA,GAAA;MACtC,IAAA,CAAA;MACA,IAAA,CAAO,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,OAAb,CAAP,EAAiC,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,iDAAb,CAAjC;MACA,IAAA,CAAA;aACA,OAAO,CAAC,IAAR,CAAa,GAAb;IAJsC,CAAA,IAAxC;;AA/MA",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser/prompt-db'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n#...........................................................................................................\n{ hide }                  = GUY.props\n{ get_types }             = require './types'\n#...........................................................................................................\n{ DATOM }                 = require 'datom'\n{ new_datom\n  lets\n  stamp }                 = DATOM\n#...........................................................................................................\n{ Journal_walker  }       = require './journal-walker'\n{ Image_walker    }       = require './image-walker'\n{ DBay            }       = require 'dbay'\n{ SQL             }       = DBay\n{ U               }       = require './utilities'\n{ trash           }       = require 'trash-sync'\n\n\n#===========================================================================================================\nclass Prompt_db\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    hide @, 'types',  get_types()\n    @cfg = @types.create.prompt_db_cfg cfg\n    path = U.pluck @cfg.flags, 'db'\n    trash path if @cfg.flags.trash_db\n    hide @, 'db', new DBay { path, }\n    @create_db_structure()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  create_db_structure: ->\n    # super()\n    whisper 'Î©___1', \"Prompt_file_reader::create_db_structure\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table all_prompts (\n          prompt_id text    unique not null primary key,\n          prompt    text    unique not null );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"insert into all_prompts ( prompt_id, prompt ) values ( ?, ? );\"\"\", [\n      ( U.id_from_text U.nosuchprompt ), U.nosuchprompt, ]\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table jnl_prompts (\n          prompt_id text    unique not null primary key,\n          lnr       integer unique not null,\n          comment   text               null,\n          rejected  boolean        not null );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table jnl_generations (\n          prompt_id text    not null,\n          nr        integer not null,\n          count     integer not null,\n        primary key ( prompt_id, nr ),\n        foreign key ( prompt_id ) references jnl_prompts ( prompt_id ) );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view jnl_counts as select distinct\n          g.prompt_id           as prompt_id,\n          count(*)      over w  as generations,\n          sum( count )  over w  as images\n        from jnl_generations as g\n        window w as ( partition by prompt_id );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view jnl_densities as select\n          c.prompt_id                                                                         as prompt_id,\n          c.generations                                                                       as generations,\n          c.images                                                                            as images,\n          cast( ( ( cast( c.images as real ) / c.generations / 4 ) * 100 + 0.5 ) as integer ) as density\n        from jnl_generations as g\n        left join jnl_counts as c using ( prompt_id );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view promptstats as select distinct\n          d.prompt_id     as prompt_id,\n          d.generations   as generations,\n          d.images        as images,\n          d.density       as density,\n          p.lnr           as lnr,\n          a.prompt        as prompt\n        from jnl_prompts    as p\n        join jnl_densities  as d using ( prompt_id )\n        join all_prompts    as a using ( prompt_id );\"\"\"\n    #-------------------------------------------------------------------------------------------------------\n    @db SQL\"\"\"\n      create table img_files (\n          path_id   text unique not null primary key,\n          prompt_id text        not null,\n          path      text unique not null,\n        foreign key ( prompt_id ) references all_prompts ( prompt_id ) );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view img_files_and_prompts as select\n          f.path_id     as path_id,\n          a.prompt_id   as prompt_id,\n          f.path        as path,\n          a.prompt      as prompt\n        from      all_prompts as a\n        left join img_files   as f using ( prompt_id );\"\"\"\n    #=======================================================================================================\n    @db SQL\"\"\"\n      create view img_files_with_empty_prompts as select\n          i.path_id         as path_id,\n          i.prompt_id       as prompt_id,\n          i.path            as path,\n          i.prompt          as prompt\n        from img_files_and_prompts as i\n        where i.prompt = '';\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view img_files_with_jnl_prompts as select\n          i.path_id         as path_id,\n          a.prompt_id       as prompt_id,\n          i.path            as path,\n          a.prompt          as prompt\n        from all_prompts                as a\n        join img_files_and_prompts  as i using ( prompt_id );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view img_files_without_jnl_prompts as select\n          i.path_id         as path_id,\n          i.prompt_id       as prompt_id,\n          i.path            as path,\n          i.prompt          as prompt\n        from img_files_and_prompts  as i\n        where true\n          and prompt != ''\n          and not exists ( select 1 from jnl_prompts as j where i.prompt_id = j.prompt_id );\n        \"\"\"\n    #=======================================================================================================\n    ### TAINT auto-generate? ###\n    ### NOTE will contain counts for all relations ###\n    @db SQL\"\"\"\n      create view rowcounts as\n        select            null as name,                 null as rowcount where false\n        -- -------------------------------------------------------------------------------------------------\n        union all select  'all_prompts',                    count(*)  from all_prompts\n        -- -------------------------------------------------------------------------------------------------\n        union all select  'jnl_prompts',                    count(*)  from jnl_prompts\n        union all select  'jnl_generations',                count(*)  from jnl_generations\n        union all select  'jnl_counts',                     count(*)  from jnl_counts\n        union all select  'jnl_densities',                  count(*)  from jnl_densities\n        union all select  'promptstats',                    count(*)  from promptstats\n        -- -------------------------------------------------------------------------------------------------\n        union all select  'img_files',                      count(*)  from img_files\n        union all select  'img_files_and_prompts',          count(*)  from img_files_and_prompts\n        -- -------------------------------------------------------------------------------------------------\n        union all select  'img_files_with_empty_prompts',   count(*)  from img_files_with_empty_prompts\n        union all select  'img_files_with_jnl_prompts',     count(*)  from img_files_with_jnl_prompts\n        union all select  'img_files_without_jnl_prompts',  count(*)  from img_files_without_jnl_prompts\n        -- -------------------------------------------------------------------------------------------------\n        ;\"\"\"\n    #=======================================================================================================\n    ### TAINT this should become a standard part of `DBay`; note that as with `@_required_table_names`,\n    one should walk the prototype chain ###\n    hide @, 'insert_into', insert_into = {}\n    #.......................................................................................................\n    insert_into.all_prompts = do =>\n      insert_stmt = @db.create_insert { into: 'all_prompts',  on_conflict: { update: true, }, }\n      return U.wrap_insert insert_into_all_prompts = ( d ) => @db insert_stmt, d\n    #.......................................................................................................\n    insert_into.jnl_prompts = do =>\n      insert_stmt = @db.create_insert { into: 'jnl_prompts',  on_conflict: { update: true, }, }\n      return U.wrap_insert insert_into_jnl_prompts = ( d ) => @db insert_stmt, lets d, ( d ) ->\n        d.rejected = if d.rejected is true then 1 else 0 ### TAINT should be auto-converted ###\n    #.......................................................................................................\n    insert_into.jnl_generations = do =>\n      insert_stmt = @db.create_insert { into: 'jnl_generations', }\n      return U.wrap_insert insert_into_jnl_generations = ( d ) => @db insert_stmt, d\n    #.......................................................................................................\n    insert_into.img_files = do =>\n      insert_stmt = @db.create_insert { into: 'img_files', }\n      return U.wrap_insert insert_into_img_files = ( d ) => @db insert_stmt, d\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_known_img_path_ids: -> new Set @db.first_values SQL\"select path_id from img_files;\"\n  get_known_prompt_ids:   -> new Set @db.first_values SQL\"select prompt_id from all_prompts;\"\n\n#===========================================================================================================\nmodule.exports = {\n  Prompt_db, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  echo()\n  echo ( GUY.trm.grey 'Î©___6' ), ( GUY.trm.gold \"run `node lib/cli.js help` instead of this file\" )\n  echo()\n  process.exit 111\n"
  ]
}
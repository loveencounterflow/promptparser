{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n#...........................................................................................................\n{ hide }                  = GUY.props\npluck                     = ( o, k ) -> R = o[ k ]; delete o[ k ]; R\n{ get_types }             = require './types'\n#...........................................................................................................\n{ DATOM }                 = require 'datom'\n{ new_datom\n  lets\n  stamp }                 = DATOM\n#...........................................................................................................\n{ Journal_walker  }       = require './journal-walker'\n{ Image_walker    }       = require './image-walker'\n{ DBay            }       = require 'dbay'\n{ SQL             }       = DBay\n# { U               }       = require './utilities'\n# { trash           }       = require 'trash-sync'\n{ Prompt_db       }       = require './prompt-db'\n\n\n#===========================================================================================================\nknown_path_ids  = null\nlines           = null\ncmd             = 'build'\nflags           =\n  match:      /(?:)/,\n  trash_db:   true,\n  sample:     0.1,\n  # sample:     1,\n  # max_count:  20,\n  max_count:  Infinity,\n  prompts:    '../../jzr/to-be-merged-from-Atlas/prompts-consolidated.md'\n  images:     '../../Downloads/b-from-downloader'\n  seed:       1,\n  pre_match:  /^\\[.*?\\].*?\\S+/,\n  db:         '/dev/shm/promptparser.sqlite'\n\n#===========================================================================================================\nrun_journal_walker = ( prompt_db ) ->\n  lines = GUY.fs.walk_lines_with_positions flags.prompts\n  yield from new Journal_walker { cmd, flags, lines, }\n  return null\n\n#===========================================================================================================\nrun_image_walker = ( prompt_db ) ->\n  known_path_ids  = prompt_db.img_get_known_path_ids()\n  yield from new Image_walker { cmd, flags, known_path_ids, }\n  return null\n\n#===========================================================================================================\nif module is require.main then await do =>\n  prompt_db = new Prompt_db { cmd, flags, }\n  do =>\n    count = 0\n    for d from run_image_walker prompt_db\n      count++; break if count > flags.max_count\n      prompt_db.insert_into[ d.table ] d.fields\n    return null\n  do =>\n    for d from run_journal_walker prompt_db\n      prompt_db.insert_into[ d.table ] d.fields\n    return null\n\n\n  return null\n\n  echo()\n  echo ( GUY.trm.grey 'Î©___4' ), ( GUY.trm.gold \"run `node lib/cli.js help` instead of this file\" )\n  echo()\n  process.exit 111\n"
  ]
}
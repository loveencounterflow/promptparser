{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n#...........................................................................................................\npluck                     = ( o, k ) -> R = o[ k ]; delete o[ k ]; R\n#...........................................................................................................\n{ Journal_walker  }       = require './journal-walker'\n{ Image_walker    }       = require './image-walker'\n\n#===========================================================================================================\nclass Prompt_db\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    hide @, 'types',  get_types()\n    @cfg = @types.create.prompt_db.cfg cfg\n    @trash_db_if_necessary()\n    hide @, 'db',     pluck @cfg, 'db'\n    @create_db_structure()\n    # @_populate_db() ???\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  trash_db_if_necessary: ->\n    return 0 unless @cfg.trash_db\n    return trash @cfg.db_path\n\n  #---------------------------------------------------------------------------------------------------------\n  create_db_structure: ->\n    # super()\n    whisper 'Ω___1', \"Prompt_file_reader::create_db_structure\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table jnl_prompts (\n          id        text    not null primary key,\n          lnr       integer not null,\n          prompt    text    not null,\n          comment   text        null,\n          rejected  boolean not null,\n        unique( prompt ) );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table jnl_generations (\n          prompt_id text    not null,\n          nr        integer not null,\n          count     integer not null,\n        primary key ( prompt_id, nr ),\n        foreign key ( prompt_id ) references jnl_prompts ( id ) );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view jnl_counts as select distinct\n          prompt_id             as prompt_id,\n          count(*)      over w  as generations,\n          sum( count )  over w  as images\n        from jnl_generations as g\n        window w as ( partition by prompt_id );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view jnl_densities as select\n          c.prompt_id                                                                         as prompt_id,\n          c.generations                                                                       as generations,\n          c.images                                                                            as images,\n          cast( ( ( cast( c.images as real ) / c.generations / 4 ) * 100 + 0.5 ) as integer ) as density\n        from jnl_generations as g\n        left join jnl_counts as c on ( g.prompt_id = c.prompt_id );\"\"\"\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create view promptstats as select distinct\n          d.prompt_id     as prompt_id,\n          d.generations   as generations,\n          d.images        as images,\n          d.density       as density,\n          p.lnr           as lnr,\n          p.prompt        as prompt\n        from jnl_prompts    as p\n        join jnl_densities  as d on ( p.id = d.prompt_id );\"\"\"\n    #.......................................................................................................\n    ### TAINT auto-generate? ###\n    ### NOTE will contain counts for all relations ###\n    @db SQL\"\"\"\n      create view rowcounts as\n        select            null as name,         null as rowcount where false\n        union all select  'jnl_prompts',        count(*)          from jnl_prompts\n        union all select  'jnl_generations',    count(*)          from jnl_generations\n        union all select  'jnl_counts',         count(*)          from jnl_counts\n        union all select  'jnl_densities',      count(*)          from jnl_densities\n        ;\"\"\"\n    #.......................................................................................................\n    ### TAINT this should become a standard part of `DBay`; note that as with `@_required_table_names`,\n    one should walk the prototype chain ###\n    hide @, 'insert_into', insert_into = {}\n    #.......................................................................................................\n    insert_into.jnl_prompts = do =>\n      insert_stmt = @db.create_insert { into: 'jnl_prompts',  on_conflict: { update: true, }, }\n      return ( d ) -> @db insert_stmt, lets d, ( d ) ->\n        d.rejected = if d.rejected is true then 1 else 0 ### TAINT should be auto-converted ###\n    #.......................................................................................................\n    insert_into.jnl_generations = do =>\n      insert_stmt = @db.create_insert { into: 'jnl_generations', }\n      return ( d ) => @db insert_stmt, lets d, ( d ) ->\n        d.rejected = if d.rejected is true then 1 else 0 ### TAINT should be auto-converted ###\n    return null\n\n\n#===========================================================================================================\nmodule.exports = {\n  Prompt_db, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n\n  cmd   = 'build'\n  flags =\n    match:      /(?:)/,\n    trash_db:   true,\n    sample:     0.01,\n    max_count:  3,\n    prompts:    '../to-be-merged-from-Atlas/prompts-consolidated.md'\n    seed:       1,\n    pre_match:  /^\\[.*?\\].*?\\S+/,\n    db:         '/dev/shm/promptparser.sqlite'\n\n  lines = GUY.fs.walk_lines_with_positions flags.prompts\n\n  debug 'Ω___3', new Prompt_db { cmd, flags, }\n\n  return null\n\n  echo()\n  echo ( GUY.trm.grey 'Ω___4' ), ( GUY.trm.gold \"run `node lib/cli.js help` instead of this file\" )\n  echo()\n  process.exit 111\n"
  ]
}
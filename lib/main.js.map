{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n#...........................................................................................................\n{ Journal_walker  }       = require './journal-walker'\n{ Image_walker    }       = require './image-walker'\n\n\n\n\n#===========================================================================================================\nclass NN\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _create_db_structure: ->\n    super()\n    whisper 'Ω___1', \"Prompt_file_reader::_create_db_structure\"\n    @_db =>\n      @_db SQL\"\"\"\n        create table prd_prompts (\n            id        text    not null primary key,\n            lnr       integer not null,\n            prompt    text    not null,\n            comment   text        null,\n            rejected  boolean not null,\n          unique( prompt ) );\"\"\"\n      @_db SQL\"\"\"\n        create table prd_generations (\n            prompt_id text    not null,\n            nr        integer not null,\n            count     integer not null,\n          primary key ( prompt_id, nr ),\n          foreign key ( prompt_id ) references prd_prompts ( id ) );\"\"\"\n      @_db SQL\"\"\"\n        create view prd_counts as select distinct\n            prompt_id             as prompt_id,\n            count(*)      over w  as generations,\n            sum( count )  over w  as images\n          from prd_generations as g\n          window w as ( partition by prompt_id );\"\"\"\n      @_db SQL\"\"\"\n        create view prd_densities as select\n            c.prompt_id                                                                         as prompt_id,\n            c.generations                                                                       as generations,\n            c.images                                                                            as images,\n            cast( ( ( cast( c.images as real ) / c.generations / 4 ) * 100 + 0.5 ) as integer ) as density\n          from prd_generations as g\n          left join prd_counts as c on ( g.prompt_id = c.prompt_id );\"\"\"\n      @_db SQL\"\"\"\n        create view promptstats as select distinct\n            d.prompt_id     as prompt_id,\n            d.generations   as generations,\n            d.images        as images,\n            d.density       as density,\n            p.lnr           as lnr,\n            p.prompt        as prompt\n          from prd_prompts    as p\n          join prd_densities  as d on ( p.id = d.prompt_id );\"\"\"\n      #.....................................................................................................\n      ### TAINT auto-generate? ###\n      ### NOTE will contain counts for all relations ###\n      @_db SQL\"\"\"\n        create view rowcounts as\n          select            null as name,         null as rowcount where false\n          union all select  'prd_prompts',        count(*)          from prd_prompts\n          union all select  'prd_generations',    count(*)          from prd_generations\n          union all select  'prd_counts',         count(*)          from prd_counts\n          union all select  'prd_densities',      count(*)          from prd_densities\n          ;\"\"\"\n      #.....................................................................................................\n      ### TAINT auto-generate ###\n      hide @, '_insert_into',\n        fm_datasources:   @_db.create_insert { into: 'fm_datasources',                               }\n        prd_prompts:      @_db.create_insert { into: 'prd_prompts',  on_conflict: { update: true, }, }\n        prd_generations:  @_db.create_insert { into: 'prd_generations',                              }\n      return null\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT this should become a standard part of `DBay`; note that as with `@_required_table_names`,\n  one should walk the prototype chain ###\n  @insert_into:\n    #.......................................................................................................\n    fm_datasources: ( d ) ->\n      ### TAINT validate? ###\n      return @_db.alt @_insert_into.fm_datasources, d\n    #.......................................................................................................\n    prd_prompts: ( d ) ->\n      ### TAINT validate? ###\n      return @_db.alt @_insert_into.prd_prompts, lets d, ( d ) ->\n        d.rejected = if d.rejected is true then 1 else 0\n    #.......................................................................................................\n    prd_generations: ( d ) ->\n      ### TAINT validate? ###\n      return @_db.alt @_insert_into.prd_generations, d\n\n  #---------------------------------------------------------------------------------------------------------\n  _populate_db: ->\n    whisper 'Ω___2', \"Prompt_file_reader::_populate_db\"\n\n\n#===========================================================================================================\nmodule.exports = {\n  NN, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  echo()\n  echo ( GUY.trm.grey 'Ω___3' ), ( GUY.trm.gold \"run `node lib/cli.js help` instead of this file\" )\n  echo()\n  process.exit 111\n"
  ]
}
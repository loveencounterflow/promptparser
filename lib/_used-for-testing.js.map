{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_used-for-testing.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,cAAA,EAAA,2BAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,cAAF,CAAA,GAA4B,OAAA,CAAQ,kBAAR,CAA5B,EALA;;;EASM,8BAAN,MAAA,4BAAA,QAA0C,eAA1C,CAAA;;IAGE,WAAa,CAAE,GAAF,CAAA;;QACX,GAAG,CAAC,QAAS;;WACb,CAAM,GAAN;AACA,aAAO;IAHI,CADf;;;IAOE,iBAAmB,CAAE,MAAF,CAAA;AACrB,UAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA;MAAI,CAAA,GAAI;AACJ;MAAA,KAAA,QAAA;SAAI,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb;QACF,IAAC,CAAA,QAAQ,CAAC,IAAV,CAAe,CAAE,GAAF,EAAO,IAAP,CAAf;QACA,CAAA,GAAI,CAAC,CAAC,MAAF,CAAS,IAAC,CAAA,QAAQ,CAAC,GAAV,CAAA,CAAT;MAFN;AAGA,aAAO;IALU,CAPrB;;;IAeE,mBAAqB,CAAE,MAAF,CAAA;AACvB,UAAA,CAAA,EAAA,SAAA,EAAA,MAAA,EAAA;MAAI,SAAA,GAAY;MACZ,CAAA,GAAY;AACZ;MAAA,KAAA,aAAA;;UACE,YAAa,MAAM,CAAC;;QACpB,IAAa,SAAA,KAAa,MAAM,CAAC,SAAjC;AAAA,gBAAA;;QACA,CAAC,CAAC,IAAF,CAAO,MAAP;MAHF;AAIA,aAAO;IAPY,CAfvB;;;IAyBE,gBAAkB,CAAE,MAAF,CAAA;AACpB,UAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA;MAAI,CAAA,GAAI;AACJ;MAAA,KAAA,QAAA;SAAI,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb;AACF;QAAA,KAAA,aAAA;UACE,IAAY,IAAC,CAAA,KAAK,CAAC,GAAG,CAAC,MAAX,CAAkB,KAAlB,CAAZ;AAAA,qBAAA;;UACA,CAAC,CAAC,IAAF,CAAO,IAAC,CAAA,aAAa,CAAC,WAAf,CAA2B,GAA3B,EAAgC,KAAhC,CAAP;QAFF;MADF;AAIA,aAAO;IANS,CAzBpB;;;IAkCE,kBAAoB,CAAE,MAAF,CAAA;AACtB,UAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA;MAAI,CAAA,GAAQ;MACR,IAAA,GAAQ;AACR;MAAA,KAAA,YAAA;;UACE,OAAQ,KAAK,CAAC;;QACd,IAAS,IAAA,KAAU,KAAK,CAAC,IAAzB;AAAA,gBAAA;;QACA,CAAC,CAAC,IAAF,CAAO,KAAP;MAHF;AAIA,aAAO;IAPW;;EApCtB,EATA;;;EAwDA,MAAM,CAAC,OAAP,GAAiB,CACf,2BADe;AAxDjB",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ Journal_walker }        = require './journal-walker'\n\n\n#===========================================================================================================\nclass _Journal_walker_for_testing extends Journal_walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    cfg.lines ?= []\n    super cfg\n    return undefined\n\n  #=========================================================================================================\n  parse_all_records: ( source ) ->\n    R = []\n    for { lnr, line, eol, } from GUY.str.walk_lines_with_positions source\n      @pipeline.send { lnr, line, }\n      R = R.concat @pipeline.run()\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  parse_first_records: ( source ) ->\n    prompt_id = null\n    R         = []\n    for record from @parse_all_records source\n      prompt_id ?= record.prompt_id\n      break unless prompt_id is record.prompt_id\n      R.push record\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  parse_all_tokens: ( source ) ->\n    R = []\n    for { lnr, line, eol, } from GUY.str.walk_lines_with_positions source\n      for token from @prompt_parser._lexer.walk line\n        continue if @types.isa.symbol token\n        R.push @prompt_parser._cast_token lnr, token\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  parse_first_tokens: ( source ) ->\n    R     = []\n    lnr1  = null\n    for token from @parse_all_tokens source\n      lnr1 ?= token.lnr1\n      break if lnr1 isnt token.lnr1\n      R.push token\n    return R\n\n\n#===========================================================================================================\nmodule.exports = {\n  _Journal_walker_for_testing, }\n\n\n"
  ]
}
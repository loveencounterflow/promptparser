{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/image-walker.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser/image-walker'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nFS                        = require 'node:fs'\nPATH                      = require 'node:path'\n{ U }                     = require './utilities'\n{ hide }                  = GUY.props\n{ get_types }             = require './types'\n\n\n\n\n\n#===========================================================================================================\nclass Image_walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    hide @, 'types',              get_types()\n    @cfg                        = @types.create.image_walker_cfg cfg\n    hide @, 'known_path_ids',   U.pluck @cfg, 'known_path_ids',   new Set()\n    hide @, 'known_prompt_ids', U.pluck @cfg, 'known_prompt_ids', new Set()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  [Symbol.iterator]: ->\n    yield from @TMP_RENAME_build_file_db()\n\n  #-----------------------------------------------------------------------------------------------------------\n  TMP_RENAME_build_file_db: ->\n    { glob\n      globSync  }   = require 'glob'\n    base_path       = PATH.resolve ( @cfg.flags.images ? process.cwd() )\n    patterns        = [ '**/*.png', '**/*.jpg', '**/*.jpeg', ]\n    glob_cfg        =\n      dot:      true\n      cwd:      base_path\n    count           = 0\n    #.........................................................................................................\n    # DB.db ->\n    console.time 'TMP_RENAME_build_file_db'\n    counts    =\n      skipped:          0\n      added:            0\n      deleted:          0\n      unsampled_files:  0\n    info 'Ω___1', GUY.trm.reverse \"globbing files at #{glob_cfg.cwd} using #{rpr patterns}\"\n    rel_paths = globSync patterns, glob_cfg\n    info 'Ω___2', GUY.trm.reverse \"found #{rel_paths.length} matching files\"\n    for rel_path in rel_paths\n      count++; whisper count if ( count %% 5e3 ) is 0\n      path    = PATH.resolve base_path, rel_path\n      path_id = U.id_from_text path\n      #.....................................................................................................\n      ### TAINT use method that honors `seed` ###\n      ### --SAMPLE ###\n      if Math.random() > @cfg.flags.sample\n        counts.unsampled_files++\n        continue\n      #...................................................................................................\n      if @known_path_ids.has path_id\n        # help \"Ω___3 skipping path ID #{rpr path_id}\"\n        counts.skipped++\n        ### NOTE we know that in the present run we will not again have to test against the current\n        `path_id`, so we also know we can safely delete it from the pool of known IDs (thereby making it\n        smaller and potentially a tad faster); after having gone through all `path_ids` in the file\n        system, we will then effectively have turned `@known_path_ids` into `extraneous_path_ids`, i.e.\n        those that could be deleted from the DB if deemed necessary. ###\n        @known_path_ids.delete path_id\n      else\n        counts.added++\n        #.................................................................................................\n        { prompt_id\n          prompt    } = U.exif_from_path path\n        unless @known_prompt_ids.has prompt_id\n          @known_path_ids.add prompt_id\n          yield { $key: 'record', table: 'all_prompts', fields: { prompt_id, prompt, }, }\n        yield { $key: 'record', table: 'img_files', fields: { path_id, prompt_id, path, }, }\n    #.....................................................................................................\n    info 'Ω___4', counts\n    console.timeEnd 'TMP_RENAME_build_file_db'\n    #.........................................................................................................\n    return null\n\n#===========================================================================================================\nmodule.exports = { Image_walker, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  echo()\n  echo ( GUY.trm.grey 'Ω___5' ), ( GUY.trm.gold \"run `node lib/cli.js help` instead of this file\" )\n  echo()\n  process.exit 111\n"
  ]
}
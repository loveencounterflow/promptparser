{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/image-walker.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser/image-registry'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\nFS                        = require 'node:fs'\nPATH                      = require 'node:path'\n{ U }                     = require './utilities'\n\n\n\n\n\n\n#===========================================================================================================\nclass Image_walker\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT use types ###\n    @known_path_ids = cfg?.known_path_ids ? new Set()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  [Symbol.iterator]: ->\n    yield from @TMP_RENAME_build_file_db()\n\n  #-----------------------------------------------------------------------------------------------------------\n  TMP_RENAME_build_file_db: ->\n    { glob\n      globSync  }   = require 'glob'\n    patterns        = [ '**/*.png', '**/*.jpg', '**/*.jpeg', ]\n    cfg             = { dot: true }\n    base_path       = '.'\n    count           = 0\n    #.........................................................................................................\n    # DB.db ->\n    console.time 'TMP_RENAME_build_file_db'\n    counts    =\n      skipped:  0\n      added:    0\n      deleted:  0\n    rel_paths = globSync patterns, cfg\n    info 'Ω___1', GUY.trm.reverse \"found #{rel_paths.length} matching files\"\n    for rel_path in rel_paths\n      count++; whisper count if ( count %% 1000 ) is 0\n      abs_path  = PATH.resolve base_path, rel_path\n      path_id   = U.id_from_text abs_path\n      #...................................................................................................\n      if @known_path_ids.has path_id\n        # help \"Ω___2 skipping path ID #{rpr path_id}\"\n        counts.skipped++\n        ### NOTE we know that in the present run we will not again have to test against the current\n        `path_id`, so we also know we can safely delete it from the pool of known IDs (thereby making it\n        smaller and potentially a tad faster); after having gone through all `path_ids` in the file\n        system, we will then effectively have turned `@known_path_ids` into `extraneous_path_ids`, i.e.\n        those that could be deleted from the DB if deemed necessary. ###\n        @known_path_ids.delete path_id\n      else\n        counts.added++\n        #.................................................................................................\n        exif = U.exif_from_path abs_path\n        fields = { id: exif.prompt_id, prompt: exif.prompt, }\n        yield { $key: 'record', table: 'img_prompts', fields, }\n        #.................................................................................................\n        fields = { id: path_id, prompt_id: exif.prompt_id, path: abs_path, }\n        yield { $key: 'record', table: 'img_files', fields, }\n    #.....................................................................................................\n    # info \"Ω___8 changes to DB at #{DB.path}: #{rpr counts}\"\n    console.timeEnd 'TMP_RENAME_build_file_db'\n    #.........................................................................................................\n    return null\n\n#===========================================================================================================\nmodule.exports = { Image_walker, }\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # await demo_fast_glob()\n  # await demo_node_glob()\n  # await demo_exifr()\n  # await demo_exiftool_vendored()\n  # demo_dbay_with_exifdata()\n  iterator = new Image_walker()\n  debug 'Ω__11', iterator[Symbol.iterator]\n  debug 'Ω__12', d for d from iterator\n  debug 'Ω__13', [ iterator..., ].length\n\n\n"
  ]
}
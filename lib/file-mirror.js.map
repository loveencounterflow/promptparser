{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/file-mirror.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'promptparser/file-mirror'\n#...........................................................................................................\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n{ hide }                  = GUY.props\n{ U }                     = require './utilities'\n{ DBay }                  = require 'dbay'\n{ SQL  }                  = DBay\n# PATH                      = require 'node:path'\n# FS                        = require 'node:fs'\n{ get_types }             = require './types'\ntypes                     = get_types()\n\n\n#===========================================================================================================\nclass File_mirror\n\n  #---------------------------------------------------------------------------------------------------------\n  ### TAINT use CFG pattern ###\n  constructor: ( cfg ) ->\n    hide @, 'types', get_types()\n    @cfg  = @types.create.fm_constructor_cfg cfg\n    hide @, 'db', @cfg.db; delete @cfg.db\n    @_create_db_structure()\n    @_populate_db()\n    #.......................................................................................................\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _create_db_structure: ->\n    whisper 'Ω___1', \"File_mirror::_create_db_structure\"\n    @_clear_db()\n    @cfg.db =>\n      #.....................................................................................................\n      ### TAINT a more general solution should accommodate more than a single source file ###\n      @cfg.db SQL\"\"\"\n        create table if not exists fm_datasources (\n            lnr       integer not null primary key,\n            line      text    not null );\"\"\"\n      #.....................................................................................................\n      return null\n    #.......................................................................................................\n    @insert_into =\n      lines_table: do =>\n        insert_statement = @cfg.db.create_insert { into: @cfg.table_name, }\n        ( d ) -> @cfg.db.alt insert_statement, d\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _populate_db: ->\n    try\n      @cfg.db =>\n        for { lnr, line, eol, } from GUY.fs.walk_lines_with_positions @cfg.datasource_path\n          @insert_into.lines_table { lnr, line, }\n        return null\n    catch error\n      if error.code in [ 'ENOENT', 'EACCES', 'EPERM', ]\n        whisper 'Ω___2', \"File_mirror::_populate_db\", U.color.bad \\\n          error.message\n        process.exit 111\n      throw error\n    return null\n\n\n#===========================================================================================================\nmodule.exports = { File_mirror, }\n\n"
  ]
}